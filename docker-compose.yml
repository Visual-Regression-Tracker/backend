services:
  api:
    container_name: vrt_api
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      JWT_LIFE_TIME: ${JWT_LIFE_TIME}
      BODY_PARSER_JSON_LIMIT: ${BODY_PARSER_JSON_LIMIT}
      APP_FRONTEND_URL: ${APP_FRONTEND_URL}
    ports:
      - "${APP_PORT}:3000"
    expose:
      - "${APP_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
  migration:
    container_name: vrt_migration
    build:
      context: prisma
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    container_name: postgres
    image: postgres:15.3-alpine3.18
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    expose:
      - "${POSTGRES_PORT}"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 120s
      retries: 10
  # Available at http://localhost:5050
  # pgadmin:
  #   container_name: pgadmin4
  #   # https://hub.docker.com/r/dpage/pgadmin4
  #   # https://www.pgadmin.org/docs/pgadmin4/latest/release_notes_7_4.html
  #   image: dpage/pgadmin4:7.4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
volumes:
  postgres: